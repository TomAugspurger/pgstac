#!/bin/bash
source $(dirname $0)/migra_funcs
set -e

if [[ "${CI}" ]]; then
    set -x
fi

function usage() {
    echo -n \
        "Usage: $(basename "$0") version or rule
Format code.

This scripts is meant to be run inside the dev container.

"
}

VERSIONARG=$1


if [ "${BASH_SOURCE[0]}" = "${0}" ]; then
    cd $PYPGSTACDIR

    # Use poetry to either explicitly set the version or use a rule
    # patch, minor, or release to generate the next version number
    poetry version $VERSIONARG >/dev/null
    VERSION=$(poetry version -s)

    cd $BASEDIR
    # Modify 999_version.sql so that base migrations have a reference to the version.
    echo "SELECT set_version('${VERSION}');" >sql/999_version.sql

    # Assemble a base migration for the version and put it in the migrations directory.
    cat sql/*.sql >pypgstac/pypgstac/migrations/pgstac.${VERSION}.sql

    # Set the version in pypgstac/__init__.py
    echo '"""PyPGStac Version."""' >pypgstac/pypgstac/__init__.py
    echo "__version__ = \"${VERSION}\"" >>pypgstac/pypgstac/__init__.py

    echo $VERSION
fi
